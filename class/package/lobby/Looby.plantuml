@startuml

skinparam wrapwidth 300
skinparam classfontname consolas
skinparam classfontsize 16
skinparam classattributefontname cascadia code
skinparam classattributefontsize 14
left to right direction

package Lobby {
    class LobbySceneController {
        - userInfo : UserInfo

        - lobbyScene : LobbyScene

        - uiController : UILayerController
        - cardManageController : CardManageLayerController
        - popUpController : PopUpLayerController

        - getCurrentTabIndex()
    }

    class LobbyScene {
        - controller : LobbySceneController
        - displayUI() : void
        - displayCurrentLayer : void
    }

    package Home {
        class HomeLayerController {
            - userInfo : UserInfo
            - homeLayer : HomeLayer
            - treasureController : TreasureLayerController
            - playGameController : PlayGameController
        }

        class HomeLayer {
            - createPlayGameLayer()
            - createTreasureLayer()
            - updatePlayGameLayer()
            - updateTreasureLayer()
        }

        class PlayGameLayerController {

        }

        class PlayGameLayer {

        }

        class TreasureLayer {
            - listTreasureButton : cc.Button[]
            + setPositionForTreasure() : void
            + setListTreasureSprite() : cc.Sprite[]
            + renderListTreasure() : void
            + renderATreasure() : void
            + addTouchListener() : void
        }

        class TreasureLayerController {
            - homeController : HomeLayerController

            - listTreasureInfo : TreasureInfo[]
            - treasureLayer : TreasureLayer
            + renderTreasureLayer() : void
            + setRandomCardForTreasure(TreasureInfo info) : void
            + setStatusForBox(TreasureInfo info) : void
            + newTreasure() : TreasureInfo
            + openATreasure(int index)  : TreasureInfo
            + requireUpdateCard(CardInfo[] listCard) : void
        }

        class TreasureInfo {
            - timeStart : int
            - timeEnd : int
            - timeWaiting : int
            - 1stCard : CardInfo[]
            - status : int
        }

        HomeLayerController "1" *-- "1" PlayGameLayerController
        HomeLayerController "1" *-- "1" TreasureLayerController
        HomeLayer "1" --* "1" HomeLayerController
        TreasureInfo "n" --o "1" TreasureLayerController
        TreasureLayer "1" --* TreasureLayerController
        PlayGameLayer "1" --* "1" PlayGameLayerController

    }

    package PopUp{

        class PopUpLayerController {
            - lobbyController : LobbySceneController
            - cardController : CardController
            - showController : ShopController
            - controller : PopUpLayerController
            - {static} showPopUpWithData(data) : void
            ---
            + sử dụng CardController để có thể thực hiện thao tác UpdateCard / SwapCard trực tiếp tại PopUpLayer luôn
        }

        class PopUpLayer {
            ---
            + {static} createPopUpWithData(data) : void
            + blackBackground() : void
            + closePopUp() : void
            + showPopUp() : void
            + createPopUp() : void
            + updateObject(newObject : Object) : void
        }

        class OpenChestPopUp extends PopUpLayer {
            + createPopUp(data) : void
        }
        
        class CardUpdatePopUp extends PopUpLayer {
            + createPopUp(data) : void
        }

        class WarningPopUp extends PopUpLayer {
            + createPopUp(data) : void
        }

        class BuyingCardPopUp extends PopUpLayer {
            + createPopUp(data) : void
        }

        class BuyingChestPopUp extends PopUpLayer {
            + createPopUp(data) : void
        }

        PopUpLayer "1" --* PopUpLayerController
    }

    package CardManagerLayer {
        class CardInfo {
            - cardId : int
            - level : int
            - pieces : int
            - requiredEnergy : int
            ---
            + getDisplayInfo() : Object
            --- 
            + những gì server sẽ trả về()
        }

        class CardManagerLayer {
            - controller : CardManagerLayerController
            - selectingCardInfo : CardInfo
            ---
            + createBattleDeck(CardInfo[] battleDeck) : cc.Button[]
            + createDiscoverDeck(CardInfo[] discoverDeck) : cc.Button[]
            + selectCard(CardInfo cardInfo)
        }

        class CardManageLayerController {
            - lobbyController : LobbySceneController

            - cardManagerLayer : CardManagerLayer

            - battleDeck : CardInfo[]
            - discoverDeck : CardInfo[]
            ---
            + display() : void
            + canUpdateCard(CardInfo cardInfo) : void
            + updateCardInfo(CardInfo cardInfo) : void
            + swapCard(CardInfo battleDeckCard, CardInfo discoverDeckCard) : void
            ---
        }
        CardInfo "n" --o "1" CardManageLayerController
        CardManageLayerController "1" o-- "1" PopUpLayerController
        CardManagerLayer --* CardManageLayerController
    }

    package Shop {
        class ShopLayer {
            - createLayer(inputData : PackData)
            - updateLayer(newData : PackData)
        }

        class ShopLayerController {
            - packData : PackData
            - lobbyController : LobbyLayerController
            - shopLayer : ShopLayer
            - currentTab : int
            - buyingPack(wantedPack : Object) : void
            - doAPayment(wantedPack : Object) : void
        }

        class PackData {
            - loginPack : Object
            - paymentPack : Object
            ---
            # cái này sẽ nhận thông tin từ server để thực hiện hiển thị
        }

        ShopLayer "1" --* "1" ShopLayerController
        PackData "1" --* "1" ShopLayerController
        ShopLayerController "1" --* LobbySceneController
    }


    package UI {
        class UILayer {
            - controller : UILayerController
            - topBar : cc.Button[]
            - bottomBar : cc.Button[]
            - createTopBar(UserInfo userInfo)
            - createBottomBar()
            - updateTopbar(UserInfo userInfo)
            - updateBottomBar()
        }

        class UILayerController {
            - lobbyController : LobbyLayerController
            - uiLayer : UILayer
            - currentTab : int
            - currentTab : Lobby.LayerType
            + changeTabLayer(Lobby.LayerType newLayer)
        }
        UILayer "1" --* "1" UILayerController
    }
    class UserInfo {
        - gold : int
        - gem : int
        - battleDeck : CardInfo[]
        - discoverDeck : CardInfo[]
        - treasure : TreasureInfo[]
    }

    LobbyScene "1" --* "1" LobbySceneController
    UserInfo "n" --o LobbySceneController
    TreasureInfo "n" --o LobbySceneController
    LobbySceneController "1" *-- "1" UILayerController
    LobbySceneController "1" *-- "1" CardManageLayerController
    LobbySceneController "1" *-- "1" PopUpLayerController
}

@enduml